HIGH LEVEL WORK:
    • You implementation of the benchmarking suite is cleaned and documented,
    • The planned experiment is completely in a thorough manner,
    • The results are analysed,
    • A well-written master thesis, which you can start to work on now :)
--------------------------------------------------spilt line------------------------------------------------------------
--------------------------------------------------spilt line------------------------------------------------------------
--------------------------------------------------spilt line------------------------------------------------------------

Warning : please modify the the sequence of hyper-paramter before next test
Warning : GGSE's core is doing maximasization , please return a minimize valued for eval func.

todo: eval counter for SGE system to limit the maximize calling of fitness function.
todo: document all fucntions.
    ~BUG in interface_f1_score! How to deal with not regular prediction values??(such as 1.14123423e-12)
    ~SGE need eval_counter
    ~THE DIFFERENCE between grammar: Sge need <start> tag

#   make the pipeline and confirm it works
##  doc on how to add new problem, as a criteria of benchmark.
### add more problem which can fit step 2

--------------------------------------------------spilt line------------------------------------------------------------
--------------------------------------------------spilt line------------------------------------------------------------
--------------------------------------------------spilt line------------------------------------------------------------

modification_log:
22-04-2019:
	PonyGE2:
	    +replaced fitness function by C-implemented Fitness function for (string_match problem, regression problem and classification problems)

23-04-2019:
    Global:
       +research project(hyper-parameter tuning part)
       +standard of adding new probelm(fitness function) into test suite

29-04-2019:
    Global:
        +(on work)Data extracter
        +bug fixed on hyper-parameter-tuning.py
            --the minimize_problem bug

01-05-2019:

    PonyGE2:
        +added one decorater in from 'utilities.stats.eval_counter' to record eval_num.
        connected:
            +from utilities.stats.eval_counter import eval_counter
            +@eval_counter
            in files:
            ~fitness/base_ff.py
            ~fitness/supervised_leaning.py
            ~fitness/base_ff.py


02-05-2019:
    PonyGE2:
        +eval_count func(src/utilities/stats/eval_counter.py)

    Global:
        functionized the hyper-parameter part.


03-05-2019:
    Ponyge2:
        + /log to record logfiles
    Global:
        +logfile located at PonyGE2/log/
            logfile 'out_probelm_time_machine.txt' includes the best-found parameter-settings  and corresponded fitness
            logfile 'summary_of_PROBLEM.log' includes all tested result
        + modified .gitignore

        management.py
            some modification to control the whole test, but still untested.

    "Test On Das-5 node113-118 72H preserved"

05-05-2019:
    Global:
        +added log_analyzer to csv

06-05-2019:
    PonyGE2:
        +add ant problem for test(not passed yet)   todo: test this, and remove the uncessary part in fitness.ant("premature mark")
    Global:
        +makes the PonyGE2 tester into class.
        +add util/ folder, stores functions for universal usage
        + generally finished management.py interface (at least for PonyGE2 sys)
            bug:ignore_pattern doesn't work

07-05-2019:
    NOTE: the math func should be uniformed! which is the prerequisite of use same grammar to evaluate

12-05-2019:
   PonyGE2:
        added eval_budget limitaion in src/algorithm/search_loop.py to control the call number of fitness function.
        added eval_getter in utilities.stats.eval_counter to return the current eval_num.
        commented the print(eval_num) in src/stat/stat/print_final_stats
        modified src/utilities/algorithm/command_line_praser, to add new argument eval_budget
        default eval_budget was set to 100000
   Global:
        hyper-parameter-tunign:
            New search space to pass eval_budget to Ponyge2

13-05-2019:
    Global:
        Post_test/log_analyze:
            plotter of parallel coordinate, !!fig looks not beautiful enough!!


14-05-2019:
    !Start to deal with SGE(python2)
        vadality check


16-05-2019
    RE-implement SGE in python3!? seems trivial, then continously use python2
    sge:
        merged py2-implemented sge into playground.
    global:
        Initialization of Tester_sge in management.py

17-05-2019:
    Global:
        add hyper-para_tuning_sge.py

19-05-2019
    Global:
        make the pipeline to call sge
        +json reader in util/
        the pipelien between management to sge is ok

22-05-2019:
    Global:
        the target of stringm_match problem is moved to 'Hello world! I am testing GE.'
        multiplexer fitness verified. for "   ( ( ( s2 ) or ( ( i1 ) or ( s1 ) ) ) and ( ( ( i3 ) or ( s2 ) ) and ( ( ( i4 ) or ( ( s0 ) or ( s1 ) ) ) and ( ( ( i3 ) or ( s2 ) ) and ( ( not ( ( s1 ) and ( s2 ) ) ) or ( i6 ) ) ) ) ) ) and ( ( i5 ) or ( ( i5 ) or ( ( ( i1 ) and ( s2 ) ) or ( ( not ( not ( s1 ) ) ) or ( i1 ) ) ) ) )" both fitness value is 544.
    PonyGE2:
        +Vladislavleva4.txt parameters files
    SGE:
        +Vladislavleva4 problem
        +string_match problem


23-05-2019:
    GLobal:
        add ant.c, remove ant.h. Problem with ant problem fixed.
        fix the bug in TESTER SGE class, which is releated to interface making.

03-06-2019:
    return to work
    for bi-classification problem still need to use sklearn.f1_score was temporately replaceed in interface.


04-06-2019:
    Global:
        for safety test, disabled two hyper-parameter in PonyGE2(max_init_tree_depth and MAX_TREE_DEPTH)

05-06-2019:
    Global:
        On DAS-5. it's ok to test for three problem(Ant, Mux11, StringMatch)
        Under no PYTHONPATH, No module python2,7,13 added.
        Test info:
            05-06 ~ 15-06 Node111-node116 Three task for each node.

07-06-2019:
    Benchmark:
        Each problem will have one dir, which includes the bnf file, eval_fun name and training data/test data in  one sub-dir if that's a supervised learning problem.

10-06-2019：
    todo:log-analyzer(for output*, build a compairson between different system. For out_, build csv to accumulate all hyper-parameter settings.)

    ~!Warning : please modify the the sequence of hyper-paramter before next test
    Global:
        change the name of sge to SGE
        result_analyzer--extractor

        !change the order of parameters to PROBLEM,[Tuning Parameters],[Static Parameters]

        solve /log not exist in test

12-06-2019:
    add GGES:
        GGES can use Hyper-parameter tuning now.
        todo: Bug on run_gges(cmd): When try to extract fitness value from std_out of c program, sometimes cannot get the result since the std_out is not complete in os.popen().read()


14-06-2019:
    Global:
        add tester for GGES system.
        ant.c->ant.h

