modification_log:
22-04-2019:
	PonyGE2:
	    +replaced fitness function by C-implemented Fitness function for (string_match problem, regression problem and classification problems)

23-04-2019:
    Global:
       +research project(hyper-parameter tuning part)
       +standard of adding new probelm(fitness function) into test suite

29-04-2019:
    Global:
        +(on work)Data extracter
        +bug fixed on hyper-parameter-tuning.py
            --the minimize_problem bug

01-05-2019:
+todo:Add the MAX_BUDGET to control the eval_num of fitness func

    PonyGE2:
        +added one decorater in from 'utilities.stats.eval_counter' to record eval_num.
        connected:
            +from utilities.stats.eval_counter import eval_counter
            +@eval_counter
            in files:
            ~fitness/base_ff.py
            ~fitness/supervised_leaning.py
            ~fitness/base_ff.py


02-05-2019:
    PonyGE2:
        +eval_count func(src/utilities/stats/eval_counter.py)

    Global:
        functionized the hyper-parameter part.


03-05-2019:
    Ponyge2:
        + /log to record logfiles
    Global:
        +logfile located at PonyGE2/log/
            logfile 'out_probelm_time_machine.txt' includes the best-found parameter-settings  and corresponded fitness
            logfile 'summary_of_PROBLEM.log' includes all tested result
        + modified .gitignore

        management.py
            some modification to control the whole test, but still untested.

    "Test On Das-5 node113-118 72H preserved"

05-05-2019:
    Global:
        +added log_analyzer to csv

06-05-2019:
    PonyGE2:
        +add ant problem for test(not passed yet)   todo: test this, and remove the uncessary part in fitness.ant("premature mark")
    Global:
        +makes the PonyGE2 tester into class.
        +add util/ folder, stores functions for universal usage
        + generally finished management.py interface (at least for PonyGE2 sys)
            bug:ignore_pattern doesn't work

07-05-2019:
    NOTE: the math func should be uniformed! which is the prerequisite of use same grammar to evaluate

12-05-2019:
   PonyGE2:
        added eval_budget limitaion in src/algorithm/search_loop.py to control the call number of fitness function.
        added eval_getter in utilities.stats.eval_counter to return the current eval_num.
        commented the print(eval_num) in src/stat/stat/print_final_stats
        modified src/utilities/algorithm/command_line_praser, to add new argument eval_budget
        default eval_budget was set to 100000
   Global:
        hyper-parameter-tunign:
            New search space to pass eval_budget to Ponyge2

13-05-2019:
    Global:
        Post_test/log_analyze:
            plotter of parallel coordinate, !!fig looks not beautiful enough!!


14-05-2019:
    !Start to deal with SGE(python2)
        vadality check
    !todo: BUG FOUND IN interface.eval_f1_score


16-05-2019
    RE-implement SGE in python3!? seems trivial, then continously use python2
    sge:
        merged py2-implemented sge into playground.

